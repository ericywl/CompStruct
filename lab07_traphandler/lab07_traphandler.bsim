.include ../50002/beta.uasm 
.include ../50002/lab7checkoff.uasm
.include ../50002/lab7macros.uasm

regs:   RESERVE(32)

UI:
    save_all_regs(regs)

    LD(XP, -4, R0)                  | load word
    extract_field(R0, 31, 26, R1)   | extract OPCODE
    CMPEQC(R1, 0x10, R2)            | OPCODE == 0b010000
    BNE(R2, LDB)                    | branch to LDB if equals
    CMPEQC(R1, 0x11, R2)            | OPCIDE == 0b010001
    BNE(R2, STB)                    | branch to STD if equals

    LD(R31, regs, R0)
    LD(R31, regs + 4, R1)
    LD(R31, regs + 8, R2)
    BR(_IllegalInstruction)

LDBendif:
    ST(R7, regs, R10)
    restore_all_regs(regs)
    JMP(XP)

LDB:
    extract_field(R0, 25, 21, R10)  | extract Ra
    MULC(R10, 4, R10)               | byte offset
    LD(R10, regs, R3)               | get Reg[Ra]
    extract_field(R0, 20, 16, R11)  | extract Rc
    MULC(R11, 4, R11)               | byte offset
    LD(R11, regs, R4)               | get Reg[Rc]
    extract_field(R0, 15, 0, R12)   | extract literal
    SHLC(R12, 16, R12)
    SRAC(R12, 16, R12)               | SEXT(literal)
    ADD(R4, R12, R13)                | EA = Reg[Ra] + SEXT(literal)
    LD(R13, 0, R8)                   | MDATA = Mem[EA]

    extract_field(R13, 1, 0, R1)   | 2 LSB of EA
    CMPEQC(R1, 0, R2)              | EA[1:0] == 0
    BNE(R2, LDBif0)                | branch to LDBif0 if equals
    CMPEQC(R1, 1, R2)              | EA[1:0] == 1
    BNE(R2, LDBif1)                | branch to LDBif1 if equals
    CMPEQC(R1, 2, R2)              | EA[1:0] == 2
    BNE(R2, LDBif2)                | branch to LDBif2 if equals
    CMPEQC(R1, 3, R2)              | EA[1:0] == 3
    BNE(R2, LDBif3)                | branch to LDBif3 if equals

LDBif0:
    extract_field(R8, 7, 0, R7)     | MDATA[7:0]
    BR(LDBendif)

LDBif1:
    extract_field(R8, 15, 8, R7)    | MDATA[15:8]
    BR(LDBendif)

LDBif2:
    extract_field(R8, 23, 16, R7)   | MDATA[23:16]
    BR(LDBendif)

LDBif3:
    extract_field(R8, 31, 24, R7)   | MDATA[31:24]
    BR(LDBendif)


STBendif:
    ST(R22, 0, R13)
    restore_all_regs(regs)
    JMP(XP)

STB:
    extract_field(R0, 25, 21, R10)  | extract Rc
    MULC(R10, 4, R10)               | byte offset
    LD(R10, regs, R3)               | Reg[Rc]
    extract_field(R0, 20, 16, R11)  | extract Ra
    MULC(R11, 4, R11)               | byte offset
    LD(R11, regs, R4)               | Reg[Ra]
    extract_field(R0, 15, 0, R12)   | extract literal
    SHLC(R12, 16, R12)
    SRAC(R12, 16, R12)              | SEXT(literal)
    ADD(R4, R12, R13)               | EA = Reg[Ra] + SEXT(literal)
    LD(R13, 0, R8)                  | MDATA = Mem[EA]

STBcont:
    extract_field(R13, 1, 0, R1)    | 2 LSB of EA
    extract_field(R3, 7, 0, R14)    | Reg[Rc][7:0]
    CMPEQC(R1, 0, R2)               | EA[1:0] == 0
    BNE(R2, STBif0)                 | branch to STBif0 if equals
    CMPEQC(R1, 1, R2)               | EA[1:0] == 1
    BNE(R2, STBif1)                 | branch to STBif1 if equals
    CMPEQC(R1, 2, R2)               | EA[1:0] == 2
    BNE(R2, STBif2)                 | branch to STBif2 if equals
    CMPEQC(R1, 3, R2)               | EA[1:0] == 3
    BNE(R2, STBif3)                 | branch to STBif3 if equals

STBif0:
    ANDC(R8, 0xFF00, R15)           | clear MDATA[7:0]
    ADD(R14, R15, R22)              | MDATA[7:0] = Reg[Rc][7:0]
    BR(STBendif)

STBif1:
    extract_field(R8, 31, 16, R15)  | get 16 MSB from MDATA
    extract_field(R8, 15, 0, R16)   | get 16 LSB from MDATA
    SHLC(R15, 16, R15)              | pad 16 MSB to 32 bits
    ANDC(R16, 0x00FF, R17)
    ADD(R15, R17, R18)              | clear MDATA[15:8]
    SHLC(R14, 8, R14)               | pad Reg[Rc][7:0] to 16 bits
    ADD(R14, R18, R22)              | MDATA[15:8] = Reg[Rc][7:0]
    BR(STBendif)

STBif2:
    extract_field(R8, 31, 16, R15)  | get 16 MSB from MDATA
    extract_field(R8, 15, 0, R16)   | get 16 LSB from MDATA
    ANDC(R15, 0xFF00, R17)
    SHLC(R17, 16, R17)              | pad cleared 16 MSB to 32 bits
    ADD(R16, R17, R18)              | clear MDATA[23:16]
    SHLC(R14, 16, R14)               | pad Reg[Rc][7:0] to 24 bits
    ADD(R14, R18, R22)              | MDATA[23:16] = Reg[Rc][7:0]
    BR(STBendif)

STBif3:
    extract_field(R8, 31, 16, R15)  | get 16 MSB from MDATA
    extract_field(R8, 15, 0, R16)   | get 16 LSB from MDATA
    ANDC(R15, 0x00FF, R17)
    SHLC(R17, 16, R17)              | pad cleared 16 MSB to 32 bits
    ADD(R16, R17, R18)              | clear MDATA[23:16]
    SHLC(R14, 24, R14)               | pad Reg[Rc][7:0] to 32 bits
    ADD(R14, R18, R22)              | MDATA[23:16] = Reg[Rc][7:0]
    BR(STBendif)